<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="shop.mtcoding.project.model.jobs.JobsRepository">
    <select id="findAll" resultType="shop.mtcoding.project.model.jobs.Jobs">
        select * from jobs_tb
    </select>
    <select id="findById" resultType="shop.mtcoding.project.model.jobs.Jobs">
      select * from jobs_tb where jobs_id = #{jobsId}
    </select>

    <select id="findJobsIdByCompId" resultType="shop.mtcoding.project.dto.jobs.JobsResp$JobsIdRespDto">
      select jobs_id from jobs_tb where comp_id = #{compId}
    </select>




    <!-- <select id="findAlltoMain" resultType="shop.mtcoding.project.dto.jobs.JobsResp$findAlltoMain">
      select j.jobs_id, ( select comp_name from comp_tb where comp_id = j.comp_id) compName, 
        ( select photo from comp_tb where comp_id = j.comp_id ) photo,
        title, career, education, position, address, end_date
        <if test="userId != null">
          ,ifnull(( select user_scrap_id from user_scrap_tb where user_id = #{userId} and jobs_id = j.jobs_id ),null) user_scrap_id
        </if>
        from jobs_tb j
    </select> -->

    <resultMap id="mainOutDto" type="shop.mtcoding.project.dto.jobs.JobsResp$JobsMainOutDto">
        <id property="jobsId" column="jobs_id"/>
        <result property="title" column="title"/>
        <result property="career" column="career"/>
        <result property="education" column="education"/>
        <result property="position" column="position"/>
        <result property="address" column="address"/>
        <result property="endDate" column="end_date"/>
        <association property="userScrapDto" javaType="shop.mtcoding.project.dto.jobs.JobsResp$JobsMainOutDto$UserScrapDto">
            <id property="userScrapId" column="user_scrap_id"/>
        </association>
        <association property="compDto" javaType="shop.mtcoding.project.dto.jobs.JobsResp$JobsMainOutDto$CompDto">
            <result property="compName" column="comp_name"/>
            <result property="photo" column="photo"/>
        </association>
        <collection property="skillList" column="jobs_id" select="findByJobsSkill"/>
    </resultMap> 

    <select id="findAlltoMain" resultMap="mainOutDto">
      select *
        <if test="userId != null">
          ,ifnull(( select user_scrap_id from user_scrap_tb where user_id = #{userId} and jobs_id = j.jobs_id ),null) user_scrap_id
        </if>
        from jobs_tb 
        j join comp_tb c 
        on j.comp_id = c.comp_id
    </select>

    <select id="findAlltoMainRamdom" resultType="shop.mtcoding.project.dto.jobs.JobsResp$JobsMainRespDto">
      select j.jobs_id, ( select comp_name from comp_tb where comp_id = j.comp_id) compName, 
        ( select photo from comp_tb where comp_id = j.comp_id ) photo,
        title, career, education, position, address, end_date
        <if test="userId != null">
          ,ifnull(( select user_scrap_id from user_scrap_tb where user_id = #{userId} and jobs_id = j.jobs_id ),null) user_scrap_id
        </if>
        from jobs_tb j
        order by j.jobs_id desc
        limit 3
    </select>


    <select id="findAlltoMainRecommend" resultType="shop.mtcoding.project.dto.jobs.JobsResp$JobsMainRecommendRespDto">
      select jobs_id, c.photo, c.comp_name, j.title, j.education, j.career, j.address, j.end_date,
        ifnull(( select user_scrap_id from user_scrap_tb where user_id = #{userId} and jobs_id = j.jobs_id ),null) user_scrap_id
        from jobs_tb j join comp_tb c
        on j.comp_id = c.comp_id 
        where position in 
        ( select interest_ct from interest_tb
        where user_id = #{userId} )
    </select>
    <select id="findAlltoMainRecommendRandom" resultType="shop.mtcoding.project.dto.jobs.JobsResp$JobsMainRecommendRespDto">
      select jobs_id, c.photo, c.comp_name, j.title, j.education, j.career, j.address, j.end_date,
      ifnull(( select user_scrap_id from user_scrap_tb where user_id = #{userId} and jobs_id = j.jobs_id ),null) user_scrap_id
      from jobs_tb j join comp_tb c
      on j.comp_id = c.comp_id   
      order by j.jobs_id desc
      limit 5
    </select>

    <select id="findAllToSuggestReq" resultType="shop.mtcoding.project.dto.jobs.JobsResp$JobsSuggestRespDto">
      select jobs_id,
      title, position, end_date
      from jobs_tb
      where comp_id = #{compId}
    </select>
    
    <resultMap id="manageJobsDto" type="shop.mtcoding.project.dto.comp.CompResp$CompHomeOutDto$JobsManageJobsRespDto">
            <id property="jobsId" column="jobs_id"/>
            <result property="num" column="num"/>
            <result property="title" column="title"/>
            <result property="career" column="career"/>
            <result property="position" column="position"/>
            <result property="endDate" column="end_date"/>
            <collection property="skillList" column="jobs_id" select="findByJobsSkill"/>
    </resultMap>

    <select id="findByIdtoManageJobs" resultMap="manageJobsDto">
      select row_number()over(order by jobs_id desc)num,* from jobs_tb 
        where comp_id = #{compId}
        order by 1 asc
    </select>
  
    <!-- <select id="findBySearch" resultType="shop.mtcoding.project.dto.jobs.JobsResp$JobsSearchRespDto">
      select j.jobs_id, c.comp_name, c.photo,        java
      title, career, education, position, address, end_date
        <if test="userId != null">
          ,ifnull(( select user_scrap_id from user_scrap_tb where user_id = #{userId} and jobs_id = j.jobs_id ),null) user_scrap_id
        </if>
        from jobs_tb j join comp_tb c 
        on j.comp_id = c.comp_id
        where title regexp #{keyword} or
        c.comp_name regexp #{keyword} or
        career regexp #{keyword} or
        education regexp #{keyword} or
        position regexp #{keyword} or
        address regexp #{keyword} 
    </select> -->

    

    <resultMap id="searchDto" type="shop.mtcoding.project.dto.jobs.JobsResp$JobsSearchOutDto">
        <id property="jobsId" column="jobs_id"/>
        <result property="title" column="title"/>
        <result property="career" column="career"/>
        <result property="education" column="education"/>
        <result property="position" column="position"/>
        <result property="address" column="address"/>
        <result property="endDate" column="end_date"/>
        <association property="userScrapOutDto" javaType="shop.mtcoding.project.dto.jobs.JobsResp$JobsSearchOutDto$UserScrapOutDto">
            <id property="userScrapId" column="user_scrap_id"/>
        </association>
        <association property="compOutDto" javaType="shop.mtcoding.project.dto.jobs.JobsResp$JobsSearchOutDto$CompOutDto">
            <result property="compName" column="comp_name"/>
            <result property="photo" column="photo"/>
        </association>

        <collection property="skillList" column="jobs_id" select="findByJobsSkill"/>
    </resultMap> 
      <!-- // collection select쿼리의 조건으로 들어가는 값을 column 에 입력-->

    <select id="findByJobsSkill" resultType="java.lang.String">
        select distinct skill from required_skill_tb where jobs_id = #{jobsId}
    </select>

    <select id="findBySearch" resultMap="searchDto" >
      select *
        <if test="userId != null">
          ,ifnull(( select user_scrap_id from user_scrap_tb where user_id = #{userId} and jobs_id = j.jobs_id ),null) user_scrap_id
        </if>
        from jobs_tb 
        j join comp_tb c 
        on j.comp_id = c.comp_id
        where title regexp #{keyword} or
        c.comp_name regexp #{keyword} or
        career regexp #{keyword} or
        education regexp #{keyword} or
        position regexp #{keyword} or
        address regexp #{keyword} 
    </select>



    <!-- <select id="findByCheckBox" resultType="shop.mtcoding.project.dto.jobs.JobsResp$JobsSearchRespDto">
      select j.jobs_id, ( select comp_name from comp_tb where comp_id = j.comp_id) compName, 
        ( select photo from comp_tb where comp_id = j.comp_id ) photo,
        title, career, education, position, address, end_date
        from jobs_tb j
          where j.jobs_id  in ( select j.jobs_id
        from jobs_tb j join required_skill_tb r
        on j.jobs_id = r.jobs_id
        where 
        <if test="jDto.address != null and jDto.address.size() > 0">
          address in 
          <foreach collection="jDto.address" item="address" open="(" close=")" separator=",">
            #{address} 
          </foreach>
          and
        </if>
        <if test="jDto.skill != null and jDto.skill.size() > 0">
          skill in
          <foreach collection="jDto.skill" item="skill" open="(" close=")" separator=",">
            #{skill} 
          </foreach>
          and
        </if>
        <if test="jDto.position != null and jDto.position.size() > 0">
          position in 
          <foreach collection="jDto.position" item="position" open="(" close=")" separator=",">
            #{position} 
          </foreach>
          and
        </if>
        career regexp #{jDto.career} 
        )
    </select> -->

    <resultMap id="checkDto" type="shop.mtcoding.project.dto.jobs.JobsResp$JobsCheckOutDto">
      <id property="jobsId" column="jobs_id"/>
        <result property="title" column="title"/>
        <result property="career" column="career"/>
        <result property="education" column="education"/>
        <result property="position" column="position"/>
        <result property="address" column="address"/>
        <result property="endDate" column="end_date"/>
        <association property="userScrapDto" javaType="shop.mtcoding.project.dto.jobs.JobsResp$JobsCheckOutDto$UserScrapDto">
            <id property="userScrapId" column="user_scrap_id"/>
        </association>
        <association property="compDto" javaType="shop.mtcoding.project.dto.jobs.JobsResp$JobsCheckOutDto$CompDto">
            <result property="compName" column="comp_name"/>
            <result property="photo" column="photo"/>
        </association>
        <collection property="skillList" column="jobs_id" select="findByJobsSkill"/>
    </resultMap> 

    <select id="findByCheckBox" resultMap="checkDto">
      select *
        <if test="userId != null">
          ,ifnull(( select user_scrap_id from user_scrap_tb where user_id = #{userId} and jobs_id = j.jobs_id ),null) user_scrap_id
        </if>
        from jobs_tb 
        j join comp_tb c 
        on j.comp_id = c.comp_id
          where j.jobs_id  in ( select j.jobs_id
        from jobs_tb j join required_skill_tb r
        on j.jobs_id = r.jobs_id
        where 
        <if test="jDto.address != null and jDto.address.size() > 0">
          address in 
          <foreach collection="jDto.address" item="address" open="(" close=")" separator=",">
            #{address} 
          </foreach>
          and
        </if>
        <if test="jDto.skill != null and jDto.skill.size() > 0">
          skill in
          <foreach collection="jDto.skill" item="skill" open="(" close=")" separator=",">
            #{skill} 
          </foreach>
          and
        </if>
        <if test="jDto.position != null and jDto.position.size() > 0">
          position in 
          <foreach collection="jDto.position" item="position" open="(" close=")" separator=",">
            #{position} 
          </foreach>
          and
        </if>
        career regexp #{jDto.career} 
        )
    </select>

    <!-- <select id="findByJobsDetail" resultType="shop.mtcoding.project.dto.jobs.JobsResp$JobsDetailRespDto">
      select j.jobs_id, c.photo, c.comp_name,
        j.title, j.content, j.comp_id,
        j.career, j.education, j.position,
        j.address, j.receipt,
        c.homepage, c.representative_name, j.end_date
        <if test="userId != null">
          ,ifnull(( select user_scrap_id from user_scrap_tb where user_id = #{userId} and jobs_id = j.jobs_id ),null) user_scrap_id
        </if>
        from comp_tb c 
        join jobs_tb j 
        on c.comp_id = j.comp_id
        where j.jobs_id = #{jobsId}
    </select> -->

    <resultMap id="jobsDetailDto" type="shop.mtcoding.project.dto.jobs.JobsResp$JobsDetailOutDto">
      <id property="jobsId" column="jobs_id"/>
      <result property="title" column="title"/>
      <result property="content" column="content"/>
      <result property="career" column="career"/>
      <result property="education" column="education"/>
      <result property="position" column="position"/>
      <result property="address" column="address"/>
      <result property="receipt" column="receipt"/>
      <result property="address" column="address"/>
      <result property="homepage" column="homepage"/>
      <result property="endDate" column="end_date"/>
      <association property="userScrapDto" javaType="shop.mtcoding.project.dto.jobs.JobsResp$JobsDetailOutDto$UserScrapDto">
          <id property="userScrapId" column="user_scrap_id"/>
      </association>
      <association property="compDto" javaType="shop.mtcoding.project.dto.jobs.JobsResp$JobsDetailOutDto$CompDto">
          <result property="compId" column="comp_id"/>
          <result property="compName" column="comp_name"/>
          <result property="photo" column="photo"/>
          <result property="representativeName" column="representative_name"/>
      </association>
      <association property="applyDto" javaType="shop.mtcoding.project.dto.jobs.JobsResp$JobsDetailOutDto$ApplyDto">
          <id property="state" column="state"/>
      </association>
      <collection property="skillList" column="jobs_id" select="findByJobsSkill"/>
  </resultMap> 

    <select id="findByJobsDetail" resultMap="jobsDetailDto">
      select *
        <if test="userId != null">
          , ifnull(( select user_scrap_id from user_scrap_tb where user_id = #{userId} and jobs_id = j.jobs_id ),null) user_scrap_id
          , ifnull(( SELECT a.state state FROM apply_tb a join resume_tb r
          on a.resume_id = r.resume_id
          where r.user_id = #{userId} and a.jobs_id = #{jobsId} ),null) state
        </if>
        from comp_tb c 
        join jobs_tb j 
        on c.comp_id = j.comp_id
        where j.jobs_id = #{jobsId}
    </select>

    <select id="findMatchJobsByUserId" resultType="shop.mtcoding.project.dto.jobs.JobsResp$JobsMatchRespDto">
      select j.jobs_id, ( select comp_name from comp_tb where comp_id = j.comp_id) compName, 
        ( select photo from comp_tb where comp_id = j.comp_id ) photo,
        title, career, education, position, address, end_date,
        ifnull(( select user_scrap_id from user_scrap_tb where user_id = #{userId} and jobs_id = j.jobs_id ),null) user_scrap_id
        from jobs_tb j
        where j.jobs_id in (
        select jobs_id from required_skill_tb 
        where skill in ( 
        select s.skill from resume_skill_tb s join resume_tb r
        on r.resume_id = s.resume_id join user_tb u 
        on u.user_id = r.user_id
        where u.user_id = #{userId} )
        )
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="jDto.jobsId">
      insert into jobs_tb set title= #{jDto.title}, 
                          content = #{jDto.content}, 
                          position = #{jDto.position}, 
                          career = #{jDto.career}, 
                          education = #{jDto.education}, 
                          address = #{jDto.address}, 
                          end_date = #{jDto.endDate}, 
                          comp_id = #{jDto.compId}, 
                          receipt = #{jDto.receipt}, 
                          created_at = now() 
    </insert>

    <update id="updateById">
      update jobs_tb set title= #{jDto.title}, 
                         content = #{jDto.content}, 
                         position = #{jDto.position}, 
                         career = #{jDto.career}, 
                         education = #{jDto.education}, 
                         address = #{jDto.address}, 
                         end_date = #{jDto.endDate}, 
                         comp_id = #{jDto.compId}, 
                         receipt = #{jDto.receipt}, 
                         created_at = now()
      where jobs_id = #{jDto.jobsId}
    </update>

    <delete id="deleteById">
        delete from jobs_tb where jobs_id = #{jobsId}
   </delete>
   
</mapper>